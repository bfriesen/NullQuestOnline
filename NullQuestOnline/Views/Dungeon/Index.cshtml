@using NullQuestOnline.Helpers
@model NullQuestOnline.Models.DungeonViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_4BoxLayout.cshtml";
}

@section topleft
{
    @if (Model.PlayerDead)
    {
        @Html.KeyOptions(null,
                HtmlHelpers.KeyedOption.Create('3', "Load Last Save", @Url.Action("Index", "Town"))
            )
    }
    else if (Model.Monster != null)
    {
        if (Model.MonsterDead)
        {
            @Html.KeyOptions(null,
                HtmlHelpers.KeyedOption.Create('3', "Continue", @Url.Action("Index", "Dungeon"))
            )
        }
        else
        {
            @Html.KeyOptions(null,
                HtmlHelpers.KeyedOption.Create('1', "Attack", @Url.Action("Attack", "Dungeon")),
                HtmlHelpers.KeyedOption.Create('2', "Flee", @Url.Action("Flee", "Dungeon"))
            )
        }
    }
    else
    {
        @Html.KeyOptions(null,
            HtmlHelpers.KeyedOption.Create('1', "Delve Deeper", @Url.Action("GoDeeper", "Dungeon")),
            HtmlHelpers.KeyedOption.Create('2', "Back to Town", @Url.Action("Index", "Town"))
        )
    }
}

@section topright
{
    <h4 style="text-align: center;">
        &raquo; <span style="color: orange; font-weight: bold;">@Model.DungeonName</span> &laquo;<br />
        <span style="font-size: 0.8em; color: white;">A level <span style="font-size: 1.2em; color: yellow; font-weight: bold;">@Model.DungeonLevel</span> dungeon</span>
    </h4>

    @if (Model.Monster != null)
    {
        <span>
            <br />
            You see: <span style="font-size: 1.4em; font-weight: bold; color: white;">@Model.Monster.Name</span> (<span style="color: @Html.ColorPercentage((double)Model.Monster.CurrentHitPoints / Model.Monster.MaxHitPoints, "#FF0000", "#00FF00")">@Model.Monster.GetDescription()</span>)
        </span>
    }
    else
    {
        @Model.FluffText
    }
}

@section bottomright
{
    <div style="font-size: 0.8em;">
        @if (Model.Monster != null)
        {
            foreach (var log in (Model.CombatLog as IEnumerable<string>).Reverse().Take(21))
            {
                <text>@(new MvcHtmlString(log))<br /></text>
            }
        }
        else
        {
            <text>Image of a Dungeon</text>
        }
    </div>
}

@section bottomleft
{
    @{
        var hpBarOffset = 16 - (7 + Model.CurrentHitPoints.ToString().Length + Model.MaxHitPoints.ToString().Length);
        var xpBarOffset = 16 - (4 + Model.Experience.ToString().Length);
    }
    <div style="text-align: center;">@Model.CharacterName</div>
    <div style="font-size: 0.85em; color: White;">
        Level <span style="color: yellow;">@Model.Level</span><br />
        Gold <span style="color: yellow;">@Model.Gold</span><br />
        <br />
        HP: @Model.CurrentHitPoints / @Model.MaxHitPoints@(Html.CreateNbspOffset(hpBarOffset))[<span style="color: #58CD00">@Html.CreateOldStyleProgressBar(10, Model.HitPointsMeter)</span>]<br />
        XP: @Model.Experience@(Html.CreateNbspOffset(xpBarOffset))[<span style="color: #FFAA70">@Html.CreateOldStyleProgressBar(10, Model.ExperienceMeter)</span>]<br />
        <br />
        W: @Model.CurrentWeapon<br />
    </div>
}
